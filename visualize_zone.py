import numpy as np
import matplotlib.pyplot as plt
from hokuyolx import HokuyoLX
import time

# --- –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ª—ñ–¥–∞—Ä—É
laser = HokuyoLX(addr=('192.168.0.10', 10940))

# --- –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–æ–Ω–∏ (—É –º–µ—Ç—Ä–∞—Ö)
ZONE_WIDTH = 4.0
ZONE_HEIGHT = 2.0
ZONE_X_MIN, ZONE_X_MAX = -ZONE_WIDTH / 2, ZONE_WIDTH / 2
ZONE_Y_MIN, ZONE_Y_MAX = 0.0, ZONE_HEIGHT

# --- –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏—è–≤–ª–µ–Ω–Ω—è
TOUCH_THRESHOLD = 0.15   # –º ‚Äî –Ω–∞—Å–∫—ñ–ª—å–∫–∏ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤—ñ–¥—Å—Ç–∞–Ω—å, —â–æ–± –≤–≤–∞–∂–∞—Ç–∏ "–¥–æ—Ç–∏–∫–æ–º"
MIN_POINTS = 5           # –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ—á–æ–∫ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–æ–¥—ñ—ó
SMOOTHING = 0.3          # –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∑–≥–ª–∞–¥–∂—É–≤–∞–Ω–Ω—è —Ñ–æ–Ω—É

# --- –§–æ–Ω–æ–≤–µ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è (–ø–æ—á–∞—Ç–∫–æ–≤–∏–π "–±–∞–∑–æ–≤–∏–π" —Å—Ç–∞–Ω)
print("‚è≥ –ö–∞–ª—ñ–±—Ä—É—é —Ñ–æ–Ω (–ø—Ä–∏–±–µ—Ä–∏ –≤—Å—ñ –æ–±‚Äô—î–∫—Ç–∏ –∑ –ø–æ–ª—è –∑–æ—Ä—É)...")
time.sleep(1)
_, base_dist = laser.get_dist()
base_dist = np.array(base_dist, dtype=float) / 1000.0
print("‚úÖ –ö–∞–ª—ñ–±—Ä—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚Äî –ø–æ—á–∏–Ω–∞—é –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥!")

# --- –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
plt.ion()
fig, ax = plt.subplots(figsize=(6, 3))
sc = ax.scatter([], [], s=6, c='cyan')
ax.set_xlim(ZONE_X_MIN, ZONE_X_MAX)
ax.set_ylim(ZONE_Y_MIN, ZONE_Y_MAX)
ax.set_xlabel('X (–º)')
ax.set_ylabel('Y (–º)')
ax.set_title('Hokuyo UST-10LX ‚Äî –∑–æ–Ω–∞ 4√ó2 –º (Touch Detection)')

# --- –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª
while True:
    timestamp, dist_mm = laser.get_dist()
    dist_m = np.array(dist_mm, dtype=float) / 1000.0
    dist_m = np.nan_to_num(dist_m, nan=base_dist)  # –∑–∞–º—ñ–Ω–∞ NaN –Ω–∞ —Ñ–æ–Ω

    # –∫—É—Ç–∏ –¥–ª—è 270¬∞
    angles = np.linspace(-135, 135, len(dist_m)) * np.pi / 180.0
    x = dist_m * np.cos(angles)
    y = dist_m * np.sin(angles)

    # –ó–æ–Ω–∞ 4√ó2 –º –ø–µ—Ä–µ–¥ –ª—ñ–¥–∞—Ä–æ–º
    mask = (x > ZONE_X_MIN) & (x < ZONE_X_MAX) & (y > ZONE_Y_MIN) & (y < ZONE_Y_MAX)
    x_zone, y_zone = x[mask], y[mask]

    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞
    sc.set_offsets(np.c_[x_zone, y_zone])
    fig.canvas.draw()
    fig.canvas.flush_events()

    # --- –í–∏—è–≤–ª–µ–Ω–Ω—è –¥–æ—Ç–∏–∫—ñ–≤
    diff = base_dist - dist_m
    touch_mask = (diff > TOUCH_THRESHOLD)
    touch_points = np.sum(touch_mask)

    if touch_points > MIN_POINTS:
        idx = np.where(touch_mask)[0]
        x_touch = np.mean(x[idx])
        y_touch = np.mean(y[idx])
        print(f"üëâ Touch detected at ({x_touch:.2f}, {y_touch:.2f}) –º ‚Äî {touch_points} —Ç–æ—á–æ–∫")

    # --- –ü–æ—Å—Ç—É–ø–æ–≤–æ –æ–Ω–æ–≤–ª—é—î–º–æ —Ñ–æ–Ω –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ
    base_dist = (1 - SMOOTHING) * base_dist + SMOOTHING * dist_m

    time.sleep(0.05)